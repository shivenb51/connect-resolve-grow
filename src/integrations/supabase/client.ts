// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Use environment variables or fallback to demo values
const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL || 'https://demo.supabase.co';
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_PUBLISHABLE_KEY || 'demo-key';

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Create a mock Supabase client that handles errors gracefully
export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});

// Add error handling wrapper
export const safeSupabaseCall = async (operation: () => Promise<any>) => {
  try {
    return await operation();
  } catch (error: any) {
    console.warn('Supabase operation failed:', error.message);
    // Return mock data for demo purposes
    return { data: null, error: { message: 'Demo mode - Supabase not configured' } };
  }
};